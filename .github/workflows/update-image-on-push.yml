name: "Update image and push to Github Packages and Docker Hub when Dockerfile is changed"
# Run this workflow every time a new commit pushed to your repository
on:
  push:
    branches:
    - main
    paths:
    - 'Dockerfile'
jobs:
  rebuild-container:
    name: "Rebuild Container with the latest base image"
    runs-on: ubuntu-latest
    steps:
      - 
        name: Prepare outputs
        id: prep
        run: |
          echo "::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3.1.0
        with:
          platforms: linux/arm64
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.4.0
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Login to DockerHub
        uses: docker/login-action@v3.3.0 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: "Checkout repository"
        uses: "actions/checkout@v4"
      - 
        name: "Get p2pool Release Tag"
        id: get_tag
        run: echo "::set-output name=tag::$(awk -F "=" '/P2POOL_BRANCH=/ {print $2}' Dockerfile)"
      - 
        name: Build and push to Docker Hub and GitHub Packages Docker Registry
        uses: docker/build-push-action@v6.4.1
        id: docker_build_push
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/p2pool:latest
            ghcr.io/${{ github.repository_owner }}/p2pool:${{ steps.get_tag.outputs.tag }}
            ${{ secrets.DOCKER_USERNAME }}/p2pool:latest
            ${{ secrets.DOCKER_USERNAME }}/p2pool:${{ steps.get_tag.outputs.tag }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/simple-monerod:latest
          cache-to: type=inline
